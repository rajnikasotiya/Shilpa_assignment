import pandas as pd
import json
from transformers import pipeline

# === Load CSV ===
df = pd.read_csv("results3.csv")
record_text = str(df.loc[0, "context"])  # first record, context column

# === Load model ===
extractor = pipeline("text2text-generation", model="google/flan-t5-base")

# === Updated Prompt ===
prompt = f"""
You are an information extraction system.
Extract the following fields from the medical record below and return the result strictly as valid JSON.
Rules:
- Each field must be a JSON array (list).
- Use short, concise phrases only (e.g., "chest pain", "shortness of breath").
- If a field is not explicitly mentioned, fill it with the most relevant information from the record that fits the category.
- Never leave a field as an empty list.
- Do not invent information outside of the medical record.
- Do not include explanatory sentences, only items.

Fields to extract:
- Visit Reason
- History
- Diagnosis
- Lab Results
- Treatment Plan
- Clinical Details
- Vital Signs
- Exam Results
- Imaging Test Results
- Hospital and ED course
- Discharge Plan
- Full HPI
- Full Assessment and Plan

Medical Record:
{record_text}

Return JSON only:
"""

# === Run extraction ===
response = extractor(
    prompt,
    max_length=512,
    clean_up_tokenization_spaces=True
)[0]['generated_text']

# === Try parsing JSON ===
try:
    structured_data = json.loads(response)
except:
    structured_data = {"raw_output": response}

# === Print structured JSON ===
print(json.dumps(structured_data, indent=2))
