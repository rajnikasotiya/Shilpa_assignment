import pandas as pd
import json
from transformers import pipeline

# === Step 1: Load CSV ===
file_path = "results.csv"  # change to your file name
df = pd.read_csv(file_path)

# === Step 2: Load Phi-2 as text-generation pipeline ===
generator = pipeline(
    "text-generation",
    model="microsoft/phi-2",
    torch_dtype="auto",
    device_map="auto",
    do_sample=False
)

# === Step 3: Function to extract structured JSON in your format ===
def extract_info(text):
    # Pre-truncate if text too long (approx 480 tokens worth of chars)
    # This avoids exceeding context limit but keeps most info
    max_chars = 1500
    if len(text) > max_chars:
        text = text[:max_chars]

    prompt = (
        "From the following medical text, extract and format ONLY as JSON with this exact structure:\n"
        '{ "Visit Reason": [], '
        '"Diagnosis": [], '
        '"Past Medical History": [], '
        '"Clinical Details": [], '
        '"Vital Signs": [], '
        '"Exam Results": [], '
        '"Lab Results": [], '
        '"Imaging Test Results": [], '
        '"Hospital and ED course": [], '
        '"Discharge Plan": [], '
        '"Full HPI": [], '
        '"Full Assessment and Plan": [] }\n\n'
        "Fill each array with strings extracted from the text where applicable. "
        "If no data for a field, leave as empty array [].\n"
        "Do NOT add any explanation text, only return valid JSON.\n\n"
        f"Text: {text}\n"
        "JSON:"
    )

    output = generator(prompt, max_new_tokens=400)[0]['generated_text']

    # Try to extract JSON part cleanly
    try:
        json_start = output.find("{")
        json_end = output.rfind("}") + 1
        if json_start != -1 and json_end != -1:
            parsed = json.loads(output[json_start:json_end])
            # Pretty print with indentation but keep arrays inline
            return json.dumps(parsed, ensure_ascii=False)
        else:
            return output
    except:
        return output  # fallback to raw output

# === Step 4: Apply to the "context" column ===
df["microsoft/phi-2"] = df["context"].apply(extract_info)

# === Step 5: Save back to same file ===
df.to_csv(file_path, index=False)

print(f"Processing complete. Updated file saved: {file_path}")
