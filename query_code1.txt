import pandas as pd
import duckdb
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM

# ==========================
# 1. Load CSV file
# ==========================
CSV_PATH = "claims_data.csv"   # üëà change to your path
df = pd.read_csv(CSV_PATH)

print("‚úÖ CSV Loaded. Shape:", df.shape)

# ==========================
# 2. Load Stronger Text-to-SQL Model
# ==========================
MODEL_NAME = "Salesforce/grappa_large_jnt"
tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)
model = AutoModelForSeq2SeqLM.from_pretrained(MODEL_NAME)

def text_to_sql(question: str, schema: str = "") -> str:
    """
    Converts a natural language question into an SQL query.
    """
    input_text = f"Question: {question}\nSchema: {schema}\nSQL:"
    inputs = tokenizer.encode(input_text, return_tensors="pt", max_length=512, truncation=True)
    outputs = model.generate(inputs, max_length=256, num_beams=4, early_stopping=True)
    sql_query = tokenizer.decode(outputs[0], skip_special_tokens=True)
    return sql_query

# ==========================
# 3. Build a Cleaned Schema
# ==========================
# Pick only important columns and simplify names
schema_info = """
Table: claims_data
Columns:
- MBR_KEY (member ID)
- ANLYTC_PAID_AMT (claim paid amount)
- SCRPT_CNT (number of prescriptions)
- RX_FILLED_DT (prescription fill date)
- REFIL_IND (refill indicator)
- NDC (drug code)
- LBL_NM (drug name/label)
- SRVCAREA_ST_CD (service area state)
- AGE_YEAR_NBR (member age in years)
- CLM_NBR (claim number)
"""

# ==========================
# 4. Interactive Loop
# ==========================
duckdb.register("claims_data", df)

print("\nüí¨ Ask me anything about your data! (type 'exit' to quit)\n")

while True:
    question = input("‚ùì Enter your question: ")
    if question.lower() in ["exit", "quit", "q"]:
        print("üëã Exiting. Goodbye!")
        break

    # Generate SQL
    sql_query = text_to_sql(question, schema_info)
    print("\nüìù Generated SQL:\n", sql_query)

    # Try running SQL
    try:
        result = duckdb.query(sql_query).to_df()
        print("\nüìä Query Result:")
        print(result.head(10))
    except Exception as e:
        print("\n‚ö†Ô∏è SQL Execution Failed:", e)

    print("\n" + "="*60 + "\n")
